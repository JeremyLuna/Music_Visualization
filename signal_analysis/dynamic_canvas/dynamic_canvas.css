/* 1. Top‑level containers (renamed) */
.dc-container {
    display: flex;
    height: 100vh;
    width: 100vw;
}

.dc-canvas-area {
    flex: 1;
    display: flex;
    position: relative;
}

/* 2. Split/dragging rules stay the same */
.split-container {
    display: flex;
    width: 100%;
    height: 100%;
    position: relative;
}
.split-container > div {
    transition: flex 0.1s ease-out;
}
.dragging .split-container > div {
    transition: none;
}
.split-horizontal {
    flex-direction: row;
}
.split-vertical {
    flex-direction: column;
}

.split-child {
  display: flex;
  flex: 1;               /* honors the inline `style.flex = …` set by JS */
  flex-direction: column; /* so any child panel (which itself uses flex:1) can expand */
}

/* 3. Canvas‑panel and controls stay the same */
.canvas-panel {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    border: 2px solid #333;
    transition: border-color 0.2s ease;
    min-width: 50px;
    min-height: 50px;
}
.canvas-panel:hover {
    border-color: #555;
}
.canvas-controls {
    position: absolute;
    top: 8px;
    right: 8px;
    display: flex;
    gap: 4px;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 100;
    pointer-events: none;
}
.canvas-panel:hover .canvas-controls {
    opacity: 1;
    pointer-events: auto;
}
.control-btn {
    width: 24px;
    height: 24px;
    background: rgba(0, 122, 204, 0.9);
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    backdrop-filter: blur(10px);
}
.control-btn:hover {
    background: rgba(0, 122, 204, 1);
    transform: scale(1.1);
}
.control-btn.remove {
    background: rgba(220, 53, 69, 0.9);
}
.control-btn.remove:hover {
    background: rgba(220, 53, 69, 1);
}

/* 4. Make .canvas-content a positioned parent */
.canvas-content {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    /* remove previous centering/font styles */
}

/* 5. Embedded <canvas> fills its parent */
.embedded-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: block;
}

/* 6. Divider/dragging cursors unchanged */
.divider {
    background: #444;
    position: relative;
    z-index: 10;
    transition: background-color 0.2s;
}
.divider:hover {
    background: #666;
}
.divider.dragging {
    background: #007acc;
    user-select: none;
}
body.dragging {
    user-select: none;
    cursor: col-resize;
}
body.dragging-vertical {
    cursor: row-resize;
}

/* 7. Hide UI on idle */
body.hide-ui {
    cursor: none;
}
body.hide-ui .canvas-controls {
    opacity: 0 !important;
    pointer-events: none !important;
}
body.hide-ui .canvas-panel:hover {
    border-color: #333;
}

/* 8. Old “divider” classes (if you still use them) */
.horizontal-divider {
    width: 4px;
    cursor: col-resize;
}
.vertical-divider {
    height: 4px;
    cursor: row-resize;
}
